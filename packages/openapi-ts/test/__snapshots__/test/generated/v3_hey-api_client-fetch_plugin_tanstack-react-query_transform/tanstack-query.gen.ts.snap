// This file is auto-generated by @hey-api/openapi-ts

import type { Options } from '@hey-api/client-fetch';
import { queryOptions } from '@tanstack/react-query';
import { parentModelWithDates, modelWithDates, modelWithDatesArray, arrayOfDates, date, multipleResponses } from './services.gen';

/**
 * TODO: describe arguments, options is Hey API, queryOpts is TanStack Query
 */
export const parentModelWithDatesOptions = (options?: Options, queryOpts?: object) => { return queryOptions({
    ...queryOpts,
    queryFn: async ({ queryKey }) => {
        const { data } = await parentModelWithDates({
            ...queryKey[0].params,
            throwOnError: true
        });
        return data;
    },
    queryKey: [
        {
            scope: 'parentModelWithDates',
            params: {
                body: options?.body,
                headers: options?.headers,
                path: options?.path,
                query: options?.query
            }
        }
    ]
}); };

/**
 * TODO: describe arguments, options is Hey API, queryOpts is TanStack Query
 */
export const modelWithDatesOptions = (options?: Options, queryOpts?: object) => { return queryOptions({
    ...queryOpts,
    queryFn: async ({ queryKey }) => {
        const { data } = await modelWithDates({
            ...queryKey[0].params,
            throwOnError: true
        });
        return data;
    },
    queryKey: [
        {
            scope: 'modelWithDates',
            params: {
                body: options?.body,
                headers: options?.headers,
                path: options?.path,
                query: options?.query
            }
        }
    ]
}); };

/**
 * TODO: describe arguments, options is Hey API, queryOpts is TanStack Query
 */
export const modelWithDatesArrayOptions = (options?: Options, queryOpts?: object) => { return queryOptions({
    ...queryOpts,
    queryFn: async ({ queryKey }) => {
        const { data } = await modelWithDatesArray({
            ...queryKey[0].params,
            throwOnError: true
        });
        return data;
    },
    queryKey: [
        {
            scope: 'modelWithDatesArray',
            params: {
                body: options?.body,
                headers: options?.headers,
                path: options?.path,
                query: options?.query
            }
        }
    ]
}); };

/**
 * TODO: describe arguments, options is Hey API, queryOpts is TanStack Query
 */
export const arrayOfDatesOptions = (options?: Options, queryOpts?: object) => { return queryOptions({
    ...queryOpts,
    queryFn: async ({ queryKey }) => {
        const { data } = await arrayOfDates({
            ...queryKey[0].params,
            throwOnError: true
        });
        return data;
    },
    queryKey: [
        {
            scope: 'arrayOfDates',
            params: {
                body: options?.body,
                headers: options?.headers,
                path: options?.path,
                query: options?.query
            }
        }
    ]
}); };

/**
 * TODO: describe arguments, options is Hey API, queryOpts is TanStack Query
 */
export const dateOptions = (options?: Options, queryOpts?: object) => { return queryOptions({
    ...queryOpts,
    queryFn: async ({ queryKey }) => {
        const { data } = await date({
            ...queryKey[0].params,
            throwOnError: true
        });
        return data;
    },
    queryKey: [
        {
            scope: 'date',
            params: {
                body: options?.body,
                headers: options?.headers,
                path: options?.path,
                query: options?.query
            }
        }
    ]
}); };

/**
 * TODO: describe arguments, options is Hey API, queryOpts is TanStack Query
 */
export const multipleResponsesOptions = (options?: Options, queryOpts?: object) => { return queryOptions({
    ...queryOpts,
    queryFn: async ({ queryKey }) => {
        const { data } = await multipleResponses({
            ...queryKey[0].params,
            throwOnError: true
        });
        return data;
    },
    queryKey: [
        {
            scope: 'multipleResponses',
            params: {
                body: options?.body,
                headers: options?.headers,
                path: options?.path,
                query: options?.query
            }
        }
    ]
}); };