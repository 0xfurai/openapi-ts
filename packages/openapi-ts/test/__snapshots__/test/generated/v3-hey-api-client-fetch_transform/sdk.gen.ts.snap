// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options } from '@hey-api/client-fetch';
import type { ParentModelWithDatesData, ParentModelWithDatesResponse, ModelWithDatesData, ModelWithDatesResponse, ModelWithDatesArrayData, ModelWithDatesArrayResponse, ArrayOfDatesData, ArrayOfDatesResponse, DateData, DateResponse, MultipleResponsesData, MultipleResponsesResponse } from './types.gen';
import { modelWithDatesResponseTransformer, modelWithDatesArrayResponseTransformer, arrayOfDatesResponseTransformer, dateResponseTransformer } from './transformers.gen';

export const client = createClient(createConfig());

export const parentModelWithDates = <ThrowOnError extends boolean = false>(options?: Options<ParentModelWithDatesData, ThrowOnError>) => {
    return (options?.client ?? client).post<ParentModelWithDatesResponse, unknown, ThrowOnError>({
        url: '/api/model-with-dates',
        ...options
    });
};

export const modelWithDates = <ThrowOnError extends boolean = false>(options?: Options<ModelWithDatesData, ThrowOnError>) => {
    return (options?.client ?? client).put<ModelWithDatesResponse, unknown, ThrowOnError>({
        responseTransformer: modelWithDatesResponseTransformer,
        url: '/api/model-with-dates',
        ...options
    });
};

export const modelWithDatesArray = <ThrowOnError extends boolean = false>(options?: Options<ModelWithDatesArrayData, ThrowOnError>) => {
    return (options?.client ?? client).put<ModelWithDatesArrayResponse, unknown, ThrowOnError>({
        responseTransformer: modelWithDatesArrayResponseTransformer,
        url: '/api/model-with-dates-array',
        ...options
    });
};

export const arrayOfDates = <ThrowOnError extends boolean = false>(options?: Options<ArrayOfDatesData, ThrowOnError>) => {
    return (options?.client ?? client).put<ArrayOfDatesResponse, unknown, ThrowOnError>({
        responseTransformer: arrayOfDatesResponseTransformer,
        url: '/api/array-of-dates',
        ...options
    });
};

export const date = <ThrowOnError extends boolean = false>(options?: Options<DateData, ThrowOnError>) => {
    return (options?.client ?? client).put<DateResponse, unknown, ThrowOnError>({
        responseTransformer: dateResponseTransformer,
        url: '/api/date',
        ...options
    });
};

export const multipleResponses = <ThrowOnError extends boolean = false>(options?: Options<MultipleResponsesData, ThrowOnError>) => {
    return (options?.client ?? client).put<MultipleResponsesResponse, unknown, ThrowOnError>({
        url: '/api/multiple-responses',
        ...options
    });
};