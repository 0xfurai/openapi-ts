// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';

export class myAwesomeSimpleApi {
  /**
   * @returns Model_From_Zendesk Success
   * @throws ApiError
   */
  public static apiVVersionOdataControllerCount(): CancelablePromise<
    $OpenApiTs['/api/v{api-version}/simple/$count']['get']['res'][200]
  > {
    return __request(OpenAPI, {
      method: 'GET',
      url: '/api/v{api-version}/simple/$count',
    });
  }

  /**
   * @throws ApiError
   */
  public static getCallWithoutParametersAndResponse(): CancelablePromise<void> {
    return __request(OpenAPI, {
      method: 'GET',
      url: '/api/v{api-version}/simple',
    });
  }

  /**
   * @throws ApiError
   */
  public static putCallWithoutParametersAndResponse(): CancelablePromise<void> {
    return __request(OpenAPI, {
      method: 'PUT',
      url: '/api/v{api-version}/simple',
    });
  }

  /**
   * @throws ApiError
   */
  public static postCallWithoutParametersAndResponse(): CancelablePromise<void> {
    return __request(OpenAPI, {
      method: 'POST',
      url: '/api/v{api-version}/simple',
    });
  }

  /**
   * @throws ApiError
   */
  public static deleteCallWithoutParametersAndResponse(): CancelablePromise<void> {
    return __request(OpenAPI, {
      method: 'DELETE',
      url: '/api/v{api-version}/simple',
    });
  }

  /**
   * @throws ApiError
   */
  public static optionsCallWithoutParametersAndResponse(): CancelablePromise<void> {
    return __request(OpenAPI, {
      method: 'OPTIONS',
      url: '/api/v{api-version}/simple',
    });
  }

  /**
   * @throws ApiError
   */
  public static headCallWithoutParametersAndResponse(): CancelablePromise<void> {
    return __request(OpenAPI, {
      method: 'HEAD',
      url: '/api/v{api-version}/simple',
    });
  }

  /**
   * @throws ApiError
   */
  public static patchCallWithoutParametersAndResponse(): CancelablePromise<void> {
    return __request(OpenAPI, {
      method: 'PATCH',
      url: '/api/v{api-version}/simple',
    });
  }
}

export class myAwesomeParametersApi {
  /**
   * @param data The data for the request.
   * @param data.foo foo in method
   * @param data.bar bar in method
   * @throws ApiError
   */
  public static deleteFoo(
    data: $OpenApiTs['/api/v{api-version}/foo/{foo}/bar/{bar}']['delete']['req'],
  ): CancelablePromise<void> {
    const { foo, bar } = data;
    return __request(OpenAPI, {
      method: 'DELETE',
      url: '/api/v{api-version}/foo/{foo}/bar/{bar}',
      path: {
        foo,
        bar,
      },
    });
  }

  /**
   * @param data The data for the request.
   * @param data.parameterHeader This is the parameter that goes into the header
   * @param data.fooAllOfEnum
   * @param data.parameterQuery This is the parameter that goes into the query params
   * @param data.parameterForm This is the parameter that goes into the form data
   * @param data.parameterCookie This is the parameter that goes into the cookie
   * @param data.parameterPath This is the parameter that goes into the path
   * @param data.requestBody This is the parameter that goes into the body
   * @param data.fooRefEnum
   * @throws ApiError
   */
  public static callWithParameters(
    data: $OpenApiTs['/api/v{api-version}/parameters/{parameterPath}']['post']['req'],
  ): CancelablePromise<void> {
    const {
      parameterHeader,
      fooAllOfEnum,
      parameterQuery,
      parameterForm,
      parameterCookie,
      parameterPath,
      requestBody,
      fooRefEnum,
    } = data;
    return __request(OpenAPI, {
      method: 'POST',
      url: '/api/v{api-version}/parameters/{parameterPath}',
      path: {
        parameterPath,
      },
      cookies: {
        parameterCookie,
      },
      headers: {
        parameterHeader,
      },
      query: {
        foo_ref_enum: fooRefEnum,
        foo_all_of_enum: fooAllOfEnum,
        parameterQuery,
      },
      formData: {
        parameterForm,
      },
      body: requestBody,
      mediaType: 'application/json',
    });
  }

  /**
   * @param data The data for the request.
   * @param data.parameterHeader This is the parameter that goes into the request header
   * @param data.parameterQuery This is the parameter that goes into the request query params
   * @param data.parameterForm This is the parameter that goes into the request form data
   * @param data.parameterCookie This is the parameter that goes into the cookie
   * @param data.requestBody This is the parameter that goes into the body
   * @param data.parameterPath1 This is the parameter that goes into the path
   * @param data.parameterPath2 This is the parameter that goes into the path
   * @param data.parameterPath3 This is the parameter that goes into the path
   * @param data._default This is the parameter with a reserved keyword
   * @throws ApiError
   */
  public static callWithWeirdParameterNames(
    data: $OpenApiTs['/api/v{api-version}/parameters/{parameter.path.1}/{parameter-path-2}/{PARAMETER-PATH-3}']['post']['req'],
  ): CancelablePromise<void> {
    const {
      parameterHeader,
      parameterQuery,
      parameterForm,
      parameterCookie,
      requestBody,
      parameterPath1,
      parameterPath2,
      parameterPath3,
      _default,
    } = data;
    return __request(OpenAPI, {
      method: 'POST',
      url: '/api/v{api-version}/parameters/{parameter.path.1}/{parameter-path-2}/{PARAMETER-PATH-3}',
      path: {
        'parameter.path.1': parameterPath1,
        'parameter-path-2': parameterPath2,
        'PARAMETER-PATH-3': parameterPath3,
      },
      cookies: {
        'PARAMETER-COOKIE': parameterCookie,
      },
      headers: {
        'parameter.header': parameterHeader,
      },
      query: {
        default: _default,
        'parameter-query': parameterQuery,
      },
      formData: {
        parameter_form: parameterForm,
      },
      body: requestBody,
      mediaType: 'application/json',
    });
  }

  /**
   * @param data The data for the request.
   * @param data.requestBody This is a required parameter
   * @param data.parameter This is an optional parameter
   * @throws ApiError
   */
  public static getCallWithOptionalParam(
    data: $OpenApiTs['/api/v{api-version}/parameters/']['get']['req'],
  ): CancelablePromise<void> {
    const { requestBody, parameter } = data;
    return __request(OpenAPI, {
      method: 'GET',
      url: '/api/v{api-version}/parameters/',
      query: {
        parameter,
      },
      body: requestBody,
      mediaType: 'application/json',
    });
  }

  /**
   * @param data The data for the request.
   * @param data.parameter This is a required parameter
   * @param data.requestBody This is an optional parameter
   * @throws ApiError
   */
  public static postCallWithOptionalParam(
    data: $OpenApiTs['/api/v{api-version}/parameters/']['post']['req'],
  ): CancelablePromise<void> {
    const { parameter, requestBody } = data;
    return __request(OpenAPI, {
      method: 'POST',
      url: '/api/v{api-version}/parameters/',
      query: {
        parameter,
      },
      body: requestBody,
      mediaType: 'application/json',
    });
  }
}
